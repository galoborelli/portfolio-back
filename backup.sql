--
-- PostgreSQL database dump
--

-- Dumped from database version 17.2
-- Dumped by pg_dump version 17.2
-- Eliminar todas las tablas existentes


SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: portfolio_app_education; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.portfolio_app_education (
    id bigint NOT NULL,
    title character varying(200) NOT NULL,
    university character varying(200) NOT NULL,
    description character varying(800) NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL
);


ALTER TABLE public.portfolio_app_education OWNER TO postgres;

--
-- Name: portfolio_app_education_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.portfolio_app_education ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.portfolio_app_education_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: portfolio_app_media; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.portfolio_app_media (
    id bigint NOT NULL,
    url character varying(200) NOT NULL,
    project_id bigint
);


ALTER TABLE public.portfolio_app_media OWNER TO postgres;

--
-- Name: portfolio_app_projects; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.portfolio_app_projects (
    id bigint NOT NULL,
    title character varying(200) NOT NULL,
    description character varying(800) NOT NULL,
    tecnologies character varying(200)[] NOT NULL
);


ALTER TABLE public.portfolio_app_projects OWNER TO postgres;

--
-- Name: portfolio_app_projects_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.portfolio_app_projects ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.portfolio_app_projects_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: portfolio_app_video_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.portfolio_app_media ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.portfolio_app_video_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add education	7	add_education
26	Can change education	7	change_education
27	Can delete education	7	delete_education
28	Can view education	7	view_education
29	Can add projects	8	add_projects
30	Can change projects	8	change_projects
31	Can delete projects	8	delete_projects
32	Can view projects	8	view_projects
33	Can add media	9	add_media
34	Can change media	9	change_media
35	Can delete media	9	delete_media
36	Can view media	9	view_media
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$870000$uazgkf7d2CdXyyn620d1vI$eUB3GU8UwR9XgY3V10HQ91avxxpEH6KqWuEkSpyyyyY=	2025-07-12 11:01:30.152343+02	t	galob				t	t	2025-06-16 17:21:09.585+02
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	portfolio_app	education
8	portfolio_app	projects
9	portfolio_app	media
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-06-26 11:58:22.249137+02
2	auth	0001_initial	2025-06-26 11:58:22.281496+02
3	admin	0001_initial	2025-06-26 11:58:22.293833+02
4	admin	0002_logentry_remove_auto_add	2025-06-26 11:58:22.296998+02
5	admin	0003_logentry_add_action_flag_choices	2025-06-26 11:58:22.300245+02
6	contenttypes	0002_remove_content_type_name	2025-06-26 11:58:22.306971+02
7	auth	0002_alter_permission_name_max_length	2025-06-26 11:58:22.310619+02
8	auth	0003_alter_user_email_max_length	2025-06-26 11:58:22.314023+02
9	auth	0004_alter_user_username_opts	2025-06-26 11:58:22.31702+02
10	auth	0005_alter_user_last_login_null	2025-06-26 11:58:22.320355+02
11	auth	0006_require_contenttypes_0002	2025-06-26 11:58:22.320895+02
12	auth	0007_alter_validators_add_error_messages	2025-06-26 11:58:22.323725+02
13	auth	0008_alter_user_username_max_length	2025-06-26 11:58:22.329551+02
14	auth	0009_alter_user_last_name_max_length	2025-06-26 11:58:22.333019+02
15	auth	0010_alter_group_name_max_length	2025-06-26 11:58:22.336933+02
16	auth	0011_update_proxy_permissions	2025-06-26 11:58:22.340447+02
17	auth	0012_alter_user_first_name_max_length	2025-06-26 11:58:22.343763+02
18	portfolio_app	0001_initial	2025-06-26 11:58:22.355539+02
19	portfolio_app	0002_rename_video_media_delete_imageproject	2025-06-26 11:58:22.362064+02
20	portfolio_app	0003_alter_education_description	2025-06-26 11:58:22.364755+02
21	portfolio_app	0004_alter_education_description	2025-06-26 11:58:22.366139+02
22	portfolio_app	0005_remove_media_title_media_project	2025-06-26 11:58:22.369344+02
23	portfolio_app	0006_alter_projects_description	2025-06-26 11:58:22.37193+02
24	portfolio_app	0007_alter_media_project	2025-06-26 11:58:22.373501+02
25	sessions	0001_initial	2025-06-26 11:58:22.380512+02
26	portfolio_app	0008_projects_tecnlogies	2025-06-30 10:29:56.05087+02
27	portfolio_app	0009_rename_tecnlogies_projects_tecnologies	2025-06-30 10:31:14.695651+02
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
gfwksf7q53he4qxbdzzs3y1p0adk69w3	.eJxVjMsOwiAUBf-FtSEQLA-X7v0GcrhcpGpoUtpV479rky50e2bmbCJiXWpcO89xzOIitDj9bgn05LaD_EC7T5KmtsxjkrsiD9rlbcr8uh7u30FFr986OA3ji_dwFuwppQCbNVRQznniADqjuJLIaKMtBsOUinGkAhiDF-8P-zg4yw:1uULOy:8zVeguAx-HBStPsoISezeQE02Nx4B5L5JWFY8e3EFrs	2025-07-09 10:22:40.044+02
j0jwsk7ftzch5cvbacgwbz3i845e2ded	.eJxVjMsOwiAUBf-FtSEQLA-X7v0GcrhcpGpoUtpV479rky50e2bmbCJiXWpcO89xzOIitDj9bgn05LaD_EC7T5KmtsxjkrsiD9rlbcr8uh7u30FFr986OA3ji_dwFuwppQCbNVRQznniADqjuJLIaKMtBsOUinGkAhiDF-8P-zg4yw:1uRBeI:UWlnBTuKHdY17e6xQNg324pnfmBFKUmST1Ve-gCL3NQ	2025-06-30 17:21:26.094+02
vmyrzcscc5lfjk2qzbd8bfxdmdzua9xx	.eJxVjMsOwiAUBf-FtSEQLA-X7v0GcrhcpGpoUtpV479rky50e2bmbCJiXWpcO89xzOIitDj9bgn05LaD_EC7T5KmtsxjkrsiD9rlbcr8uh7u30FFr986OA3ji_dwFuwppQCbNVRQznniADqjuJLIaKMtBsOUinGkAhiDF-8P-zg4yw:1uUjdn:C6aLZogoCJLAdleNP4g-BRE5ei4xoWCx2r41drrhS3c	2025-07-10 12:15:35.426209+02
7ljmcrmr2eyso67ugkasvlwfgnm9xcfc	.eJxVjMsOwiAUBf-FtSEQLA-X7v0GcrhcpGpoUtpV479rky50e2bmbCJiXWpcO89xzOIitDj9bgn05LaD_EC7T5KmtsxjkrsiD9rlbcr8uh7u30FFr986OA3ji_dwFuwppQCbNVRQznniADqjuJLIaKMtBsOUinGkAhiDF-8P-zg4yw:1uVp75:Wno8XfC8AmJciz70n0HZdt5D6i0tuq1WzSqR_CVeuGM	2025-07-13 12:18:19.759004+02
xgwtrfx2hcvr6xwh6rkwf8oeoqte0h2v	.eJxVjMsOwiAUBf-FtSEQLA-X7v0GcrhcpGpoUtpV479rky50e2bmbCJiXWpcO89xzOIitDj9bgn05LaD_EC7T5KmtsxjkrsiD9rlbcr8uh7u30FFr986OA3ji_dwFuwppQCbNVRQznniADqjuJLIaKMtBsOUinGkAhiDF-8P-zg4yw:1uZ3kU:7HX9HUfMdRTZVGOBU0UpEXBsd2TsetPyf1PCP591y9U	2025-07-22 10:32:22.834978+02
bofslw9r4lfruirvqcp5cun42ygzxfpm	.eJxVjMsOwiAUBf-FtSEQLA-X7v0GcrhcpGpoUtpV479rky50e2bmbCJiXWpcO89xzOIitDj9bgn05LaD_EC7T5KmtsxjkrsiD9rlbcr8uh7u30FFr986OA3ji_dwFuwppQCbNVRQznniADqjuJLIaKMtBsOUinGkAhiDF-8P-zg4yw:1uaW6s:ovd-ZFSKKTw231v-7wmfpjHbrxD1Y7pi-9yB1G9Q2Gc	2025-07-26 11:01:30.156951+02
\.


--
-- Data for Name: portfolio_app_education; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.portfolio_app_education (id, title, university, description, start_date, end_date) FROM stdin;
1	Analista Programador Universitario	Universidad Nacional de La Plata	En estos 2 años de la carrera he adquirido sólidos conocimientos en materias fundamentales como Lógica, Organización y Arquitectura de Computadoras, y Matemática. Esta formación me permitió desarrollar una base teórica y práctica para abordar problemas de programación con un enfoque analítico y estructurado. Aprendí a descomponer y resolver problemas de manera eficiente, fortaleciendo mi pensamiento lógico y mejorando mis habilidades para planificar y organizar soluciones en entornos de desarrollo.	2021-03-10	2023-11-29
2	Desarrollador Web Full Stack	Universidad Nacional Tecnológica (UTN)	Tras cursar dos años de la carrera de Analista Programador, decidí orientar mi camino profesional hacia el desarrollo web. Para fortalecer mis conocimientos en esta área, realicé una Diplomatura en Desarrollo Web Full Stack en la Universidad Tecnológica Nacional. Durante esta formación adquirí experiencia práctica en el uso de tecnologías y frameworks clave del ecosistema web, tales como HTML, CSS, JavaScript, Node.js, Python, PostgreSQL, MongoDB, React y Angular. Esta capacitación me permitió integrar tanto el desarrollo frontend como backend, consolidando una visión integral del desarrollo de aplicaciones web modernas.	2024-01-15	2024-05-20
3	Curso Intensivo de Inglés	EF Education First	Realicé un curso intensivo en Education First, donde desarrollé competencias comunicativas  en inglés. Esta formación me permitió desenvolverme con fluidez en contextos tanto académicos como profesionales donde finalmente certifiqué un nivel B2 (Higher Intermediate).	2020-06-10	2020-11-10
4	Licenciatura en Administración de Empresas	Universidad Nacional de La Plata	Durante los dos primeros años de la Licenciatura en Administración de Empresas, adquirí conocimientos en áreas como administración, contabilidad y economía. Esta formación me brindó herramientas para desarrollar habilidades organizativas, optimizar la eficiencia en la realización de tareas y mejorar la gestión del tiempo, los cuales considero aspectos fundamentales para un desempeño profesional efectivo.	2017-03-05	2018-11-22
\.


--
-- Data for Name: portfolio_app_media; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.portfolio_app_media (id, url, project_id) FROM stdin;
1	https://res.cloudinary.com/de5eluuax/image/upload/v1750174281/ShipRelax_zqfu0l.png	1
2	https://res.cloudinary.com/de5eluuax/image/upload/v1750840211/Imagen_de_WhatsApp_2023-05-16_gk4zjf.jpg	\N
3	https://res.cloudinary.com/de5eluuax/video/upload/v1750840744/3130284-Uhd_3840_2160_30Fps_ev1mjm.mp4	\N
4	https://res.cloudinary.com/de5eluuax/image/upload/v1751887946/Captura_de_pantalla_2025-07-07_131021_kgv3e4.png	2
5	https://res.cloudinary.com/de5eluuax/image/upload/v1751964803/Captura_de_pantalla_2025-07-08_101819_auuyfx.png	3
6	https://res.cloudinary.com/de5eluuax/image/upload/v1751962722/Captura_de_pantalla_2025-07-08_101414_iaxomf.png	4
7	https://res.cloudinary.com/de5eluuax/image/upload/v1751966159/Captura_de_pantalla_2025-07-07_131833_de1hbb.png	5
\.


--
-- Data for Name: portfolio_app_projects; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.portfolio_app_projects (id, title, description, tecnologies) FROM stdin;
5	Buscador de Noticias	Desarrollé una aplicación web que permite a los usuarios buscar noticias en tiempo real según el país y la temática seleccionados. La interfaz fue construida con Angular, TypeScript y Bootstrap, logrando una experiencia de usuario clara, responsiva y funcional.  El sistema se conecta a una API externa de noticias, a la cual realiza consultas dinámicas en función de los filtros elegidos por el usuario. Esto permite obtener y mostrar noticias actualizadas de forma precisa según la ubicación y el interés temático.  Este proyecto fue clave para profundizar en el consumo de APIs externas, el manejo de parámetros en tiempo real y el procesamiento de datos asincrónicos, consolidando mis habilidades en integración de servicios web y arquitectura frontend moderna.	{angular,typescript,bootstrap}
3	Landing Page – TimiFTV	Este proyecto representó mi primera experiencia como freelancer y marcó un paso importante en mi carrera profesional. Me encargué del desarrollo de la landing page para TimiFTV, una plataforma web dedicada a la reserva de turnos para partidos de footvolley. Para su implementación utilicé tecnologías como Vite.js para la construcción eficiente del frontend, Material UI para una interfaz visual atractiva y responsiva, y Cloudinary para la gestión y almacenamiento optimizado de contenido multimedia. Además del desarrollo técnico, este proyecto me permitió incorporar experiencia de trabajo en equipo dentro de un entorno real, ya que colaboré con el desarrollador principal del proyecto, quien me brindó guía durante el proceso. Esta colaboración fue clave para aprender sobre flujos de trabajo pr	{vite,material,cloudinary,django,postgres}
1	Plataforma de reservas náuticas (Abril - Mayo 2025)	Ship Relax es un proyecto que representa mi primera experiencia profesional en el desarrollo de software. Se trata de una aplicación web destinada a gestionar reservas de paseos en barco en la isla de Mallorca. La plataforma permite a los usuarios seleccionar una fecha en un calendario interactivo, consultar los turnos disponibles para ese día y concretar su reserva de forma sencilla. El sistema incorpora integración de pagos mediante Stripe, lo que garantiza transacciones seguras y eficientes. Para su desarrollo utilicé React con Vite para el frontend, Material UI para la interfaz de usuario, y un backend construido con Django y PostgreSQL como base de datos.	{stripe,django,python,postgresql,vite}
2	Gestor de Productos	Aplicación web desarrollada con una arquitectura full stack que permite gestionar productos de manera eficiente a través de operaciones CRUD. El frontend fue construido utilizando Angular, Bootstrap y TypeScript, brindando una interfaz intuitiva y  responsiva para la interacción del usuario. Del lado del backend, la aplicación utiliza Node.js con Express como framework de servidor, y MongoDB como base de datos NoSQL para el almacenamiento de los productos. Cada producto cuenta con atributos como nombre, precio, categoría y país de origen, permitiendo al usuario filtrar dinámicamente por categoría para una navegación más rápida y segmentada. Esta solución está pensada para negocios o inventarios simples que requieran una herramienta eficaz, personalizable y escalable para gestionar su stock	{angular,typescript,bootstrap,node,express,mongoDB}
4	VIP - Thai Massage	Este proyecto fue mi segunda experiencia como freelancer, en la cual colaboré en el desarrollo de una aplicación web destinada a la reserva de turnos para masajes. Mi principal contribución fue la implementación de un formulario interactivo donde el usuario puede seleccionar: el tipo de masaje deseado, la duración en minutos, y la fecha de preferencia. A partir de esta selección, la aplicación filtra automáticamente los horarios disponibles para ese día. Una vez completados todos los campos, la información se envía al backend para procesar y almacenar la reserva. Para esta solución utilicé tecnologías como Vite y Material UI en el frontend, y Django y PostgreSQL en el backend. Esta experiencia reforzó mis habilidades técnicas, pero sobre todo la importancia de la comunicación.	{vite,material,django,postgres}
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 36, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 9, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 28, true);


--
-- Name: portfolio_app_education_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.portfolio_app_education_id_seq', 4, true);


--
-- Name: portfolio_app_projects_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.portfolio_app_projects_id_seq', 5, true);


--
-- Name: portfolio_app_video_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.portfolio_app_video_id_seq', 7, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: portfolio_app_education portfolio_app_education_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.portfolio_app_education
    ADD CONSTRAINT portfolio_app_education_pkey PRIMARY KEY (id);


--
-- Name: portfolio_app_projects portfolio_app_projects_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.portfolio_app_projects
    ADD CONSTRAINT portfolio_app_projects_pkey PRIMARY KEY (id);


--
-- Name: portfolio_app_media portfolio_app_video_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.portfolio_app_media
    ADD CONSTRAINT portfolio_app_video_pkey PRIMARY KEY (id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: portfolio_app_media_project_id_d157b845; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX portfolio_app_media_project_id_d157b845 ON public.portfolio_app_media USING btree (project_id);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: portfolio_app_media portfolio_app_media_project_id_d157b845_fk_portfolio; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.portfolio_app_media
    ADD CONSTRAINT portfolio_app_media_project_id_d157b845_fk_portfolio FOREIGN KEY (project_id) REFERENCES public.portfolio_app_projects(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

